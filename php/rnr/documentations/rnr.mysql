DROP DATABASE IF EXISTS rnr;
CREATE DATABASE rnr CHARACTER SET utf8 COLLATE utf8_bin;
GRANT ALL PRIVILEGES ON rnr.* TO 'rnr'@'localhost' IDENTIFIED BY 'rnr';
FLUSH PRIVILEGES;
USE rnr;

DROP TABLE IF EXISTS rnr_users;
CREATE TABLE rnr_users
(
  id       BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  username CHAR(64)        NOT NULL DEFAULT '',
  password CHAR(32)        NOT NULL DEFAULT '',
  PRIMARY KEY (id),
  UNIQUE KEY rnr_users__username (username)
) ENGINE=InnoDB CHARSET=utf8 COLLATE=utf8_bin;

DROP TABLE IF EXISTS rnr_sessions;
CREATE TABLE rnr_sessions
(
  id            BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  user_id       BIGINT UNSIGNED NOT NULL DEFAULT 0,
  value         CHAR(40)        NOT NULL DEFAULT '',
  creation_time TIMESTAMP       NOT NULL DEFAULT NOW(),
  PRIMARY KEY (id),
  UNIQUE KEY rnr_sessions__value (value),
  FOREIGN KEY (user_id) REFERENCES rnr_users (id) ON DELETE CASCADE
) ENGINE=InnoDB CHARSET=utf8 COLLATE=utf8_bin;

DROP TABLE IF EXISTS rnr_licenses;
CREATE TABLE rnr_licenses
(
  id   BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  name CHAR(64)        NOT NULL DEFAULT '',
  PRIMARY KEY (id),
  UNIQUE KEY rnr_licenses__name (name)
) ENGINE=InnoDB CHARSET=utf8 COLLATE=utf8_bin;

DROP TABLE IF EXISTS rnr_permissions;
CREATE TABLE rnr_permissions
(
  id         BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  user_id    BIGINT UNSIGNED NOT NULL DEFAULT 0,
  license_id BIGINT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (id),
  UNIQUE KEY rnr_permissions__user_id__license_id (user_id, license_id),
  FOREIGN KEY (user_id) REFERENCES rnr_users (id) ON DELETE CASCADE,
  FOREIGN KEY (license_id) REFERENCES rnr_licenses (id) ON DELETE CASCADE
) ENGINE=InnoDB CHARSET=utf8 COLLATE=utf8_bin;

DROP FUNCTION IF EXISTS rnr_f_users_username;
DELIMITER ;;
CREATE FUNCTION rnr_f_users_username(var_id BIGINT)
  RETURNS CHAR(64)
  BEGIN
    DECLARE var_username CHAR(64) DEFAULT '';
    SELECT
      username INTO var_username
    FROM
      rnr_users
    WHERE
      id = var_id;
    RETURN var_username;
  END;
;;
DELIMITER ;

DROP FUNCTION IF EXISTS rnr_f_users_id;
DELIMITER ;;
CREATE FUNCTION rnr_f_users_id(var_username CHAR(64))
  RETURNS BIGINT
  BEGIN
    DECLARE var_id CHAR(64) DEFAULT -1;
    SELECT
      id INTO var_id
    FROM
      rnr_users
    WHERE
      username = var_username;
    RETURN var_id;
  END;
;;
DELIMITER ;

DROP FUNCTION IF EXISTS rnr_f_licenses_name;
DELIMITER ;;
CREATE FUNCTION rnr_f_licenses_name(var_id BIGINT)
  RETURNS CHAR(64)
  BEGIN
    DECLARE var_name CHAR(64) DEFAULT '';
    SELECT
      name INTO var_name
    FROM
      rnr_licenses
    WHERE
      id = var_id;
    RETURN var_name;
  END;
;;
DELIMITER ;

DROP FUNCTION IF EXISTS rnr_f_licenses_id;
DELIMITER ;;
CREATE FUNCTION rnr_f_licenses_id(var_name CHAR(64))
  RETURNS BIGINT
  BEGIN
    DECLARE var_id BIGINT DEFAULT -1;
    SELECT
      id INTO var_id
    FROM
      rnr_licenses
    WHERE
      name = var_name;
    RETURN var_id;
  END;
;;
DELIMITER ;

-- Data

INSERT INTO rnr_users (username, password) VALUES ('admin', MD5('a'));
INSERT INTO rnr_users (username, password) VALUES ('user1', MD5('u1'));
INSERT INTO rnr_users (username, password) VALUES ('user2', MD5('u2'));

INSERT INTO rnr_licenses (name) VALUES ('admin');
INSERT INTO rnr_licenses (name) VALUES ('test');

INSERT INTO rnr_permissions(user_id, license_id) VALUES (rnr_f_users_id('admin'), rnr_f_licenses_id('admin'));
INSERT INTO rnr_permissions(user_id, license_id) VALUES (rnr_f_users_id('admin'), rnr_f_licenses_id('test'));
INSERT INTO rnr_permissions(user_id, license_id) VALUES (rnr_f_users_id('user2'), rnr_f_licenses_id('test'));
